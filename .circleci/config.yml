version: 2
jobs:
  build:
    docker:
      - image: maven:3.6.3-jdk-11
    steps:
      - checkout
      - restore_cache:
          keys:
            - maven-repo-v1-{{.Branch}}-{{checksum "pom.xml"}}
      - run:
          name: Tests
          command: |
            mvn clean verify sonar:sonar -P coverage -Dsonar.login=${SONAR_TOKEN} -Dsonar.host.url=${SONAR_URL}
      - save_cache:
          paths:
            - ~/.m2
          key: maven-repo-v1-{{.Branch}}-{{checksum "pom.xml"}}
  releaseArtifact:
    machine: true
    steps:
      - checkout
      - run:
          name: Build
          command: |
            docker build -t bockyanggoh/cds:latest .
            docker tag bockyanggoh/cds:latest bockyanggoh/cds:1.0.${CIRCLE_WORKFLOW_ID}
      - run:
          name: Push Images to DockerHub
          command: |
            echo $DOCKER_USERNAME
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
            docker push bockyanggoh/cds
  deployStaging:
    docker:
      - image: tinyworks/azcli:2.1.0-alpine
    steps:
      - checkout
      - run:
          name: Deploy Staging
          command: |
            az login --service-principal --username $AZURE_USERNAME --password $AZURE_PASSWORD --tenant $AZURE_TENANT
            az aks get-credentials -g aks-rg -n cds-cluster
            kubectl apply -f ./kubernetes/development/app.yml
            kubectl annotate deployment.v1.apps/cds-app-stg kubernetes.io/change-cause="$(git log -1 --pretty=%B)"
            kubectl set image deployments/cds-app-stg cds-app-stg=bockyanggoh/cds:1.0.$CIRCLE_WORKFLOW_ID
            curl https://raw.githubusercontent.com/tinyworkssoftware/wholesome-scripts/master/kube-wait.sh --output kube-wait.sh
            chmod 700 *.sh
            ./kube-wait.sh default cds-app-stg
            kubectl get svc -lapp=cds-app-svc-stg
  deployProduction:
    docker:
      - image: tinyworks/azcli:2.1.0-alpine
    steps:
      - checkout
      - run:
          name: Deploy Production
          command: |
            az login --service-principal --username $AZURE_USERNAME --password $AZURE_PASSWORD --tenant $AZURE_TENANT
            az aks get-credentials -g aks-rg -n cds-cluster
            kubectl apply -f ./kubernetes/production/app.yml
            kubectl annotate deployment.v1.apps/cds-app-prod kubernetes.io/change-cause="$(git log -1 --pretty=%B)"
            kubectl set image deployments/cds-app-prod cds-app-prod=bockyanggoh/cds:1.0.$CIRCLE_WORKFLOW_ID
            curl https://raw.githubusercontent.com/tinyworkssoftware/wholesome-scripts/master/kube-wait.sh --output kube-wait.sh
            chmod 700 *.sh
            ./kube-wait.sh default cds-app-prod
            kubectl get svc -lapp=cds-app-svc-prod
workflows:
  version: 2
  build:
    jobs:
      - build
      - releaseArtifact:
          requires:
            - build
          context: dockerhub
      - deployStaging:
          requires:
            - releaseArtifact
          context: azuredeploy
      - deployProduction:
          requires:
            - releaseArtifact
          context: azuredeploy